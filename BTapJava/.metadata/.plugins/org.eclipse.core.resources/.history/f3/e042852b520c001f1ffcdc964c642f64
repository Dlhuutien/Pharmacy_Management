package services;

import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;

import javax.swing.JOptionPane;

import dao.DoiMatKhauDAO;
import entities.TaiKhoanNhanVien;
import entities.TaiKhoanQuanLy;
import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityTransaction;
import jakarta.persistence.Query;

public class DoiMatKhau_Service extends UnicastRemoteObject implements DoiMatKhauDAO {
	private static final long serialVersionUID = 1L;
	private EntityManager entityManager;

	public DoiMatKhau_Service(EntityManager entityManager) throws RemoteException {
		this.entityManager = entityManager;
	}

	@Override
	public boolean ktraTaiKhoan(String username, String password) {
		try {
			String queryStr;
			if (username.matches("QL\\d+")) {
				queryStr = "SELECT COUNT(*) FROM TaiKhoanQuanLy WHERE taiKhoan = :username AND matKhau = :password";
			} else if (username.matches("NV\\d+")) {
				queryStr = "SELECT COUNT(*) FROM TaiKhoanNhanVien WHERE taiKhoan = :username AND matKhau = :password";
			} else {
				return false;
			}

			Query query = entityManager.createQuery(queryStr);
			query.setParameter("username", username);
			query.setParameter("password", password);

			// Kiểm tra xem có bản ghi nào khớp với tên người dùng và mật khẩu không
			boolean result = (Long) query.getSingleResult() > 0;

			// Nếu kiểm tra thành công, thực hiện đổi mật khẩu
			if (result) {
				thucHienDoiMK(username, password);
			}

			return result;
		} catch (Exception ex) {
			ex.printStackTrace();
			return false;
		}
	}

	@Override
	public void thucHienDoiMK(String username, String newPass) throws RemoteException {
		try {
			if (username.matches("QL\\d+")) {
				TaiKhoanQuanLy taiKhoanQuanLy = entityManager.find(TaiKhoanQuanLy.class, username);
				taiKhoanQuanLy.setMatKhau(newPass); // Sử dụng mật khẩu mới
				if (updateQL(taiKhoanQuanLy)) {
					JOptionPane.showMessageDialog(null, "Đổi mật khẩu thành công");
					return;
				}
			} else {
				TaiKhoanNhanVien taiKhoanNhanVien = entityManager.find(TaiKhoanNhanVien.class, username);
				taiKhoanNhanVien.setMatKhau(newPass); // Sử dụng mật khẩu mới
				if (updateNV(taiKhoanNhanVien)) {
					JOptionPane.showMessageDialog(null, "Đổi mật khẩu thành công");
					return;
				}
			}
			// Thông báo lỗi đến client
		} catch (Exception e) {
			e.printStackTrace();
			// Thông báo lỗi đến client
		}
	}

	@Override
	public boolean updateNV(TaiKhoanNhanVien nhanVien) throws RemoteException {
		EntityTransaction trans = entityManager.getTransaction();
		try {
			trans.begin();
			entityManager.merge(nhanVien);
			trans.commit();
			return true;
		} catch (Exception e) {
			if (trans.isActive()) {
				trans.rollback();
			}
			e.printStackTrace();
		}
		return false;
	}

	@Override
	public boolean updateQL(TaiKhoanQuanLy quanLy) throws RemoteException {
		EntityTransaction trans = entityManager.getTransaction();
		try {
			trans.begin();
			entityManager.merge(quanLy);
			trans.commit();
			return true;
		} catch (Exception e) {
			if (trans.isActive()) {
				trans.rollback();
			}
			e.printStackTrace();
		}
		return false;
	}

}
