package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import connectDB.ConnectDB;
import entity.NhanVien;


public class NhanVien_DAO {
	public ArrayList<NhanVien> getalltbNhanVien() {
		ArrayList<NhanVien> dsnv = new ArrayList<NhanVien>();
		try {
			ConnectDB.getInstance();
			Connection con = ConnectDB.getConnection();

			String sql = "Select * from NhanVien";
			Statement statement = con.createStatement();
			ResultSet rs = statement.executeQuery(sql);

			while (rs.next()) {
				String maNV = rs.getString("maNV");
				String tenNV = rs.getString("ten");
				int tuoi = rs.getInt("tuoi");
				boolean phai = rs.getBoolean("phai");
				float luong = rs.getFloat("tienLuong");
				PhongBan pBan = new PhongBan(rs.getString("maPhong"));
				NhanVien nv = new NhanVien(maNV, hoNV, tenNV, tuoi, phai, pBan, luong);
				dsnv.add(nv);

			}
		} catch (SQLException e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return dsnv;
	}

	public ArrayList<NhanVien> getNhanVienTheoMaNV(String id) {
		ArrayList<NhanVien> dsnv = new ArrayList<NhanVien>();
		ConnectDB.getInstance();
		Connection con = ConnectDB.getConnection();
		PreparedStatement statement =null;
		try {						
			String sql = "Select * from NhanVien where maNv = ?";
			statement=con.prepareStatement(sql);
			statement.setString(1, id);
			// Thực thi câu lệnh SQL trả về đối tượng ResultSet.
			ResultSet rs = statement.executeQuery();
			// Duyệt trên kết quả trả về.
			while (rs.next()) {// Di chuyển con trỏ xuống bản ghi kế tiếp.
				String maNV = rs.getString("maNV");
				String hoNV = rs.getString("ho");
				String tenNV = rs.getString("ten");
				int tuoi = rs.getInt("tuoi");
				boolean phai = rs.getBoolean("phai");
				float luong = rs.getFloat("tienLuong");
				PhongBan pBan = new PhongBan(rs.getString("maPhong"));
				NhanVien nv = new NhanVien(maNV, hoNV, tenNV, tuoi, phai, pBan, luong);
				dsnv.add(nv);
			}
		} catch (SQLException e) {e.printStackTrace();				}
		finally {
			try {				
				statement.close();
			} catch (SQLException e) {				
				e.printStackTrace();		
				}		
		}
		return dsnv;
	}
	public ArrayList<NhanVien> getNhanVienTheoPhongBan(String phongBan) {
		ArrayList<NhanVien> dsnv = new ArrayList<NhanVien>();
		ConnectDB.getInstance();
		Connection con = ConnectDB.getConnection();
		PreparedStatement statement =null;
		try {						
			String sql = "Select * from NhanVien where maPhong = ?";
			statement=con.prepareStatement(sql);
			statement.setString(1, phongBan);
			// Thực thi câu lệnh SQL trả về đối tượng ResultSet.
			ResultSet rs = statement.executeQuery();
			// Duyệt trên kết quả trả về.
			while (rs.next()) {// Di chuyển con trỏ xuống bản ghi kế tiếp.
				String maNV = rs.getString("maNV");
				String hoNV = rs.getString("ho");
				String tenNV = rs.getString("ten");
				int tuoi = rs.getInt("tuoi");
				boolean phai = rs.getBoolean("phai");
				float luong = rs.getFloat("tienLuong");
				PhongBan pBan = new PhongBan(rs.getString("maPhong"));
				NhanVien nv = new NhanVien(maNV, hoNV, tenNV, tuoi, phai, pBan, luong);
				dsnv.add(nv);
			}
		} catch (SQLException e) {e.printStackTrace();				}
		finally {
			try {				
				statement.close();
			} catch (SQLException e) {				
				e.printStackTrace();		
				}		
		}
		return dsnv;
	}
	public boolean create(NhanVien nv) {
		ConnectDB.getInstance();
		Connection con = ConnectDB.getConnection();
		PreparedStatement stmt = null;
		int n = 0;
		try {
			stmt = con.prepareStatement("insert into"
					+ " NhanVien values(?, ?, ?, ?, ?, ?,?)");
			stmt.setString(1,nv.getMaNv());
			stmt.setString(2,nv.getHo());
			stmt.setString(3,nv.getTen());
			stmt.setInt(4, nv.getTuoi());
			stmt.setBoolean(5, nv.isPhai());
			stmt.setString(6, nv.getPhong().getMaPhong());
			stmt.setFloat(7, nv.getTienLuong());
			n = stmt.executeUpdate();						
		} catch (SQLException e) {			
			e.printStackTrace();
		}
		finally {
			try {
				stmt.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return n > 0; 
	}
	public void xoa(String ma) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		String sql = "delete from nhanvien where manv = ?";
		try {
			stmt = con.prepareStatement(sql);
			stmt.setString(1, ma);
			stmt.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
